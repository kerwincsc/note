* LB安装与配置
  Load Balance 负载均衡
** lvs的安装与配置
   lvs == linux virtual server 由章文嵩于1998年5月成立
   
   lvs的三种模式: NAT/TUN/DR
   lvs的八种算法:
   参考http://www.it165.net/admin/html/201401/2248.html
*** 安装
    在Director上安装ipvsadm
    =yum install -y ipvsadm=
*** 配置
    - 准备三台服务器, 分别叫 director , rs1 , rs2;
      - Director要配置两张网卡, 一张对外, 一张对内;

    *NAT模式*
-------------------
    - Director上的配置
      - 编辑新建一个脚本 =vim /usr/local/sbin/lvs_nat.sh=
	#+BEGIN_EXAMPLE
	#! /bin/bash
	# director 服务器上开启路由转发功能:
	echo 1 > /proc/sys/net/ipv4/ip_forward
	# 关闭icmp的重定向
	echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
	echo 0 > /proc/sys/net/ipv4/conf/default/send_redirects
	echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects
	echo 0 > /proc/syc/net/ipv4/conf/eth1/send_redirects
	# director 设置防火墙
	iptables -t nat -F
	iptables -t nat -X
	iptables -t nat -A POSTROUTING -s 192.168.11.0/24 -j MSAQUERADE
	# director油墨ipvsadm
	IPVSADM='/sbin/ipvsadm'
	$IPVSADM -C
	$IPVSADM -A -t 192.168.21.190:80 -s wrr
	$IPVSADM -a -t 192.168.21.190:80 -r 192.168.11.20:80 -m -w 2
	$IPVSADM -a -t 192.168.21.190:80 -r 192.168.11.30:80 -m -w 1
	#+END_EXAMPLE
	-m 表示 nat模式
      - 运行 =sh /usr/local/sbin/lvs_nat.sh=
	查看信息 =ipvsadm -ln=
    - rs上的配置
      让数据包返回给Director, 即设置rs的网关为Director的地址
      - =vim /etc/sysconfig/network-scripts/ifcfg-eth0=
      - 重启网卡 =ifdown eth0; ifup eth0=
      - 启动80端口, 实际上就是开启一个通过80端口的web服务, 如nginx, apache

    *DR模式*
---------------------
如果先前进行了NAT模式的测试, 要记得清空iptables的nat规则和ipvsadm的规则 =iptables -t nat -F= =ipvsadm -C=

此模式的缺点是比较浪费公网IP;

需要3个公网IP和一个虚拟IP; 从虚拟IP进, 从公网IP出;

- Director上的配置
  - 编辑新建一个脚本 =vim /usr/local/sbin/lvs_dr.sh=
    #+BEGIN_EXAMPLE
    #! /bin/bash
    # 打开端口转发功能
    echo 1 > /proc/sys/net/ipv4/ip_forward
    ipv=/sbin/ipvsadm
    vip=192.168.1.100
    rs1=192.168.1.104
    rs2=192.168.1.105
    ifconfig eth0:0 $vip broadcast $vip netmask 255.255.255.255 up
    route add -host $vip dev eth0:0
    $ipv -C
    $ipv -A -t $vip:80 -s rr
    $ipv -a -t $vip:80 -r $rs1:80 -g -w 1
    $ipv -a -t $vip:80 -r $rs2:80 -g -w 1
    #+END_EXAMPLE
    -w 代表 dr模式      虚拟IP必须和公网IP在同一网段;
- RS上的配置
  - 编辑新建脚本 =vim /usr/local/sbin/lvs_rs.sh=
    #+BEGIN_EXAMPLE
    #! /bin/bash
    vip=192.168.1.150
    ifconfig lo:0 $vip broadcast $vip netmask 255.255.255.255 up
    route add -host $vip lo:0
    echo "1" > /proc/sys/net/ipv4/conf/lo/arp_ignore
    echo "2" > /proc/sys/net/ipv4/conf/lo/arp_announce
    echo "1" > /proc/sys/net/ipv4/conf/all/arp_ignore
    echo "2" > /proc/sys/net/ipv4/conf/all/arp_announce
    #+END_EXAMPLE
    =sh /usr/local/sbin/lvs_rs.sh=

**** lvs结合keepalived
     - 安装keepalived =yum install -y keepalived=
     - =vim /etc/keepalived/keepalived.conf=
       #+BEGIN_EXAMPLE
       vrrp_instance VI_1 {
       state MASTER
       interface eth0
       virtual_router_id 51
       priority 100 # 备用服务器上为90
       advert_int 1
       authentication {
        auth_type PASS
        auth_pass 1111
       }
       virtual_ipaddress {
        192.168.1.150
       }
       }

       virtual_server 192.168.1.150 80 {
       delay_loop 6                # 每隔6秒查询realserver状态
       lb_algo rr                  # 指定lvs的算法
       lb_kind DR                  # 指定模式 DirectRoute
       persistence_timeout 0       # 同一IP的连接60秒内被分配到同一台realserver
       protocol TCP                # 用TCP协议检查realserver状态

       real_server 192.168.1.104 80 {
        weight 100              # 权重
        TCP_CHECK {
                connect_timeout 10      # 10秒无响应超时
                nb_get_retry 3
                delay_before_retry 3
                connect_port 80
        }
       }

       real_server 192.168.1.105 80 {
        weight 100
        TCP_CHECK {
                connect_timeout 10      # 10秒无响应超时
                nb_get_retry 3
                delay_before_retry 3
                connect_port 80
        }
       }
       }
       #+END_EXAMPLE
**** nginx的负载均衡集群
     - =yum install nginx -y=
     - =vim /etc/nginx/conf.d/lb.conf
       #+BEGIN_EXAMPLE
       upstream aming {
           server 192.168.0.249:80 weight=2;
           server 192.168.0.250:80 weight=1;
       }

       server {
           listen 80;
           server_name www.123.com;
           location / {
               proxy_pass http://aming/;
               proxy_set_header Host $host;
           }
       }
       #+END_EXAMPLE
       =service nginx restart=
     - 测试 =curl -x127.0.0.1:80 www.123.com=
       如果输出内容轮流显示, 说明配置成功;
*** 常用操作与信息
