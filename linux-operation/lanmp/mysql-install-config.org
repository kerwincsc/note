* mysql安装与配置
** 编译安装
   - 安装cmake =yum install cmake=
   - 添加mysql用户
     #+BEGIN_EXAMPLE
     useradd -s /sbin/nologin -M -c "MySQL User" mysql
     #+END_EXAMPLE
   - 创建mysql数据库目录 =mkdir -p /data/mysql=
   - 改变其属主与属组 =chown -R mysql:mysql /data/mysql=
   - 解压源代码 =tar zxvf mysql-5.5.18.tar.gz= =cd mysql-5.5.18=
   - 编译
     #+BEGIN_EXAMPLE
     cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/Comsenz/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/usr/local/Comsenz/etc/ -DWITH_BLACKHOLE_STORAGE_ENGINE=1
     make && make install
     #+END_EXAMPLE
   - =cd /usr/local/Comsenz/mysql=
   - =./scripts/mysql_install_db --user=mysql=
   - =chmod 755 /etc/rc.d/init.d/mysqld=
   - 加入开机自启 =chkconfig --add mysqld= =chkconfig --level 3 mysqld on=
   - 修改文件 =vim /etc/init.d/mysqld=
     #+BEGIN_EXAMPLE
     basedir=/usr/local/Comsenz/mysql
     datadir=/data/mysql
     #+END_EXAMPLE
   - 在 Comsenz 目录下创建 etc 目录，并将 MySQL 配置文件拷贝到该目录下
     #+BEGIN_EXAMPLE
     mkdir -p /usr/local/Comsenz/etc
     cp ./support-files/my-huge.cnf /usr/local/Comsenz/etc/my.cnf
     #+END_EXAMPLE
   - 编辑配置文件 /usr/local/Comsenz/etc/my.cnf
     #+BEGIN_EXAMPLE
     在 [mysqld] 段增加
     datadir = /data/mysql
     wait-timeout = 10
     max_connections = 512
     max_connect_errors = 10000000
     local-infile=0 如果启动有误, 删除此项, 目前不知道这项
     在 [mysqld] 段修改
     max_allowed_packet = 16M
     thread_cache_size = CPU个数*2
     将 log-bin 注释
     #+END_EXAMPLE
   - =mv /usr/local/Comsenz/mysql/data/* /data/mysql=
   - =service mysqld start=
   - 设置mysql的root用户密码
     #+BEGIN_EXAMPLE
     bin/mysqladmin -u root password 'admin999'
     其中 admin999 是要设置的 root 密码
     #+END_EXAMPLE
** 二进制免编译包安装
   - 下载mysql到/usr/local/src/
     #+BEGIN_EXAMPLE
     cd /usr/local/src/
     wget http://syslab.comsenz.com/downloads/linux/mysql-5.1.40-linux-i686-icc-glibc23.tar.gz
     #+END_EXAMPLE
   - 解压
     #+BEGIN_EXAMPLE
     [root@localhost src]# tar zxvf /usr/local/src/mysql-5.1.40-linux-i686-icc-glibc23.tar.gz
     #+END_EXAMPLE
   - 把解压完的数据移动到/usr/local/mysql
     #+BEGIN_EXAMPLE
     [root@localhost src]# mv mysql-5.1.40-linux-i686-icc-glibc23 /usr/local/mysql
     #+END_EXAMPLE
   - 建立mysql用户
     #+BEGIN_EXAMPLE
     [root@localhost src]# useradd -s /sbin/nologin -M mysql
     #+END_EXAMPLE
     其中
     #+BEGIN_EXAMPLE
     -M, --no-create-home          do not create the user's home directory
     -s, --shell SHELL             login shell of the new account
     #+END_EXAMPLE
   - 初始化数据库
     #+BEGIN_EXAMPLE
     [root@localhost src]# cd /usr/local/mysql
     [root@localhost mysql]# mkdir -p /data/mysql ; chown -R mysql:mysql /data/mysql
     [root@localhost mysql]# ./scripts/mysql_install_db --user=mysql --datadir=/data/mysql
     #+END_EXAMPLE
     如果初始化数据库时不在数据库目录,就要这么写
     #+BEGIN_EXAMPLE
     /usr/local/mysql/scripts/mysql_install_db --user=mysql --datadir=/data/mysql --basedir=/usr/local/mysql/
     #+END_EXAMPLE
     这个需要指定数据库安装目录;
   - 拷贝配置文件
     #+BEGIN_EXAMPLE
     [root@localhost mysql]# cp support-files/my-large.cnf /etc/my.cnf
     #+END_EXAMPLE
** 配置
*** mysql主从复制
    <从>与<主>的数据同步
**** <主>的操作
     - 修改<主>的配置文件
       在 =[mysqld]= 下增加两行:
       #+BEGIN_EXAMPLE
       # Replication Master Server (default)
       # binary logging is required for replication
       # 定义bin log生成的名字,会在指定的datadir下生成
       log-bin=mysql-first
       # 对指定数据不进行主从复制
       binlog-ignore-db=mysql
       binlog-do-db=wordpress
       #+END_EXAMPLE
       server-id=1中的1可以任定义，只要是唯一的就行

       binlog-do-db=wordpress是表示只备份wordpress数据库

       binlog-ignore-db=mysql表示忽略备份mysql数据库
     - 进入<主>mysql

       =grant replication slave on *.* to 'repl'@'127.0.0.1' identified by '123123';=
       以密码 _123123_ 给 _127.0.0.1_ 上的用户 _repl_ 授予复制权限;

       =flush privileges;=
       刷新权限;

       =flush tables with read lock;=
       读锁;

       =show master status;=
       会出现这个表
       | File               | Positon | Binlog_Do_DB | Binlog_Ignore_DB |
       |--------------------+---------+--------------+------------------|
       | mysql-first.000002 | 106     |              | mysql            |
       记住 *mysql-first.000002* 和 *106* ;
**** <从>的操作
     - 修改<从>配置文件

       将 *server-id* 修改成与<主>的server-id不同即可,如 =server-id          =2=
       
       增加 =replicate-do-db     = db1,db2= ; 与 =binlog-do-db     = db1,db2= 相对

       增加 =replicate-ignore-db     = mysql= ;与 =binlog-ignore-db     = mysql= 相对

     - 进入<从>mysql
       #+BEGIN_EXAMPLE
       # 停止slave
       slave stop;
       # 指定<主>的相关参数
       # 这里的master_port和master_log_pos后面跟的是数字,不需要使用单引号;
       change master to master_host='127.0.0.1', master_port=3306, master_user='repl', master_password='123123', master_log_file='mysql-first.000002', master_log_pos=106;
       # 启动slave
       slave start;
       # 
       show slave status\G;
       如果Slave_SQL_Running: Yes 且 Slave_IO_Running: Yes,则代表成功;
       #+END_EXAMPLE 

       最后进行主从操作时要记得 =unlock tables;=

       在实际工作中,主从复制是很脆弱的存在,所以需要为其写监控脚本,主要监控 *Slave_IO_Running: Yes* 和 *Slave_SQL_Running: Yes* ,还有 *Last_IO_Error*
** 常用操作与信息
*** 登录mysql方法
    - =mysql -u username -p password=
    - =mysql -S /tmp/mysql.sock=
    - =mysql -h hostname -P port=
*** 数据库的导出与导入
    - =mysqldump -S /tmp/mysql.sock database-name > backup-name.sql=
    - =mysql -S /tmp/mysql.sock databse-name < backup-name.sql=
