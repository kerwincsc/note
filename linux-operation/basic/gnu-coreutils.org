#+TITLE: GNU coreutils详解

* 文件处理工具
** chcon
   - 详见[[http://man.linuxde.net/chcon][chcon命令详解]]
** chgrp
   - 简介

     chgrp命令用来改变文件或目录所属的用户组。该命令用来改变指定文件所属的用户组。其中，组名可以是用户组的id，也可以是用户组的组名。文件名可以 是由空格分开的要改变属组的文件列表，也可以是由通配符描述的文件集合。如果用户不是该文件的文件主或超级用户(root)，则不能改变该文件的组

   - 详见[[http://man.linuxde.net/chgrp][chgrp命令详解]]
** chown
   - 简介

     chown命令改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。用户可以是用户或者是用户D，用户组可以是组名或组id。文件名可以使由空格分开的文件列表，在文件名中可以包含通配符。 只有文件主和超级用户才可以便用该命令。

     来自: [[http://man.linuxde.net/chown]]

   - 使用详解
     #+BEGIN_EXAMPLE
     chown test file
     chown -h test file
     #+END_EXAMPLE
     说明: 如果file是软链接, 则第一条命令运行后, 被链接文件将的属主将发生改变, 而符号链接本身的属主不变; 如果只想修改软链接本身, 如命令二, 加上 -h 选项即可; 如果是硬链接, 无论加不加 -h 选项, 硬链接文件和原文件的属主均被修改;
** chmod
   - 简介

      chmod命令用来变更文件或目录的权限。在UNIX系统家族里，文件或目录权限的控制分别以读取、写入、执行3种一般权限来区分，另有3种特殊权限可供运用。用户可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。 *符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件*

     来自: [[http://man.linuxde.net/chmod]]
** cp
   - 简介

     cp命令用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误

   来自: [[http://man.linuxde.net/cp]]
** dd
   - 简介

     dd命令用于复制文件并对原文件的内容进行转换和格式化处理。dd命令功能很强大的，对于一些比较底层的问题，使用dd命令往往可以得到出人意料的效果。用的比较多的还是用dd来备份裸设备。但是不推荐，如果需要备份oracle裸设备，可以使用rman备份，或使用第三方软件备份，使用dd的话，管理起来不太方便。 建议在有需要的时候使用dd 对物理磁盘操作，如果是文件系统的话还是使用tar backup cpio等其他命令更加方便。另外，使用dd对磁盘操作时，最好使用块设备文件

     来自: [[http://man.linuxde.net/dd]]

   - 应用

     - 创建指定大小的文件
       #+BEGIN_EXAMPLE
       dd if=/dev/zero of=sun.txt bs=1M count=1
       #+END_EXAMPLE
       说明: 创建的文件的大小为bs*count, 在本例中为1M大小的文件
** df
   - 简介

     df命令用于显示磁盘分区上的可使用的磁盘空间。默认显示单位为KB。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息

     来自: [[http://man.linuxde.net/df]]

   - 应用
     - 查看文件系统的Inode节点数 =df -i=
       #+BEGIN_EXAMPLE
       Filesystem                         Inodes IUsed   IFree IUse% Mounted on
       /dev/mapper/vg_centos6564-lv_root 1148304 24593 1123711    3% /
       tmpfs                              238319     1  238318    1% /dev/shm
       /dev/sda1                          128016    38  127978    1% /boot
       #+END_EXAMPLE
** dir
   - 简介

     和ls命令基本相同, 但是"ls 在显示器和重定向到文本文件后，格式不同，而dir则无区别"; 就是说ls命令重定向到文件中后, 会变成一列, 而dir仍然是一行
** dircolors
   - 简介

     dircolors命令设置ls命令在显示目录或文件时所用的色彩。dircolors可根据[色彩配置文件]来设置LS_COLORS环境变量或是显示设置LS_COLORS环境变量的命令

     来自: [[http://man.linuxde.net/dircolors]]
** install
   - 简介

     install命令的作用是安装或升级软件或备份数据，它的使用权限是所有用户。install命令和cp命令类似，都可以将文件/目录拷贝到指定的地点。但是，install允许你控制目标文件的属性。install通常用于程序的makefile，使用它来将程序拷贝到目标（安装）目录

     来自: [[http://man.linuxde.net/install]]

   - 应用
     - 修复chmod文件的执行权限
       #+BEGIN_EXAMPLE
       install /bin/chmod chmod
       ./chmod a+x /bin/chmod
       #+END_EXAMPLE
** ln
   - 简介

     ln命令用来为文件创件连接，连接类型分为硬连接和符号连接两种，默认的连接类型是硬连接。如果要创建符号连接必须使用"-s"选项。 注意：符号链接文件不是一个独立的文件，它的许多属性依赖于源文件，所以给符号链接文件设置存取权限是没有意义的

     来自: [[http://man.linuxde.net/ln]]

   - 应用
     - 创建符号链接 =ln -s 源文件 目标文件=

     - 创建硬链接 =ln -s 源文件 目标文件=
** ls
   - 应用 =ls -lhtrF=
** mkdir
   - 简介

     mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所在目录下的文件没有重名。  注意：在创建文件时，不要把所有的文件都存放在主目录中，可以创建子目录，通过它们来更有效地组织文件。最好采用前后一致的命名方式来区分文件和目录。例如，目录名可以以大写字母开头，这样，在目录列表中目录名就出现在前面。 在一个子目录中应包含类型相似或用途相近的文件。例如，应建立一个子目录，它包含所有的数据库文件，另有一个子目录应包含电子表格文件，还有一个子目录应包含文字处理文档，等等。目录也是文件，它们和普通文件一样遵循相同的命名规则，并且利用全路径可以唯一地指定一个目录

     来自: [[http://man.linuxde.net/mkdir]]

   - 应用
     - 创建目录时指定目录权限 =mkdir -m 755 dirname=
** mkfifo
   - 简介

     制作先进先出(FIFO)特别文件, 这个命令很少见, 它会创建出类型为"p"的文件
** mknod
   - 简介

     mknod命令用于创建Linux中的字符设备文件和块设备文件

     来自: [[http://man.linuxde.net/mknod]]
** mktemp
   - 简介

     mktemp命令被用来创建临时文件供shell脚本使用; 在进行 shell脚本程序设计时，经常需要生成临时文件，使用mktemp 命令即可满足这样的操作，且能保证文件的安全性; 该命令创建的临时文件往往文件名比较特别，这样可以防止被猜解

     来自: [[http://man.linuxde.net/mktemp]]
** mv
   - 简介

     mv命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。source表示源文件或目录，target表示目标文件或目录。如果将一个文件移到一个已经存在的目标文件中，则目标文件的内容将被覆盖;

     mv命令可以用来将源文件移至一个目标文件中，或将一组文件移至一个目标目录中。源文件被移至目标文件有两种不同的结果: 

     1. 如果目标文件是到某一目录文件的路径，源文件会被移到此目录下，且文件名不变。 如果目标文件不是目录文件，则源文件名（只能有一个）会变为此目标文件名，并覆盖己存在的同名文件;

     2. 如果源文件和目标文件在同一个目录下，mv的作用就是改文件名。当目标文件是目录文件时，源文件或目录参数可以有多个，则所有的源文件都会被移至目标文件中。所有移到该目录下的文件都将保留以前的文件名;

     注意事项：mv与cp的结果不同，mv好像文件“搬家”，文件个数并未增加。而cp对文件进行复制，文件个数增加了

     来自: [[http://man.linuxde.net/mv]]

     - 应用
       - 没有rm命令的情况下, 使用mv进行文件的删除
	 #+BEGIN_EXAMPLE
	 mv file.txt fileToDel
	 mv fileToDel file.txt
	 #+END_EXAMPLE
	 说明: 借助文件file.txt, 覆盖待删除文件, 再mv重命名
** rm
   - 简介

     rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变;

     注意：使用rm命令要格外小心。因为一旦删除了一个文件，就无法再恢复它。所以，在删除文件之前，最好再看一下文件的内容，确定是否真要删除。rm命令可以用-i选项，这个选项在使用文件扩展名字符删除多个文件时特别有用。使用这个选项，系统会要求你逐一确定是否要删除。这时，必须输入y并按Enter键，才能删除文件。如果仅按Enter键或其他字符，文件不会被删除

     来自: [[http://man.linuxde.net/rm]]
** rmdir
   - 简介

     rmdir命令用来删除空目录。当目录不再被使用时，或者磁盘空间已到达使用限定值，就需要删除失去使用价值的目录。利用rmdir命令可以从一个目录中删除一个或多个空的子目录。该命令从一个目录中删除一个或多个子目录，其中dirname佬表示目录名。如果dirname中没有指定路径，则删除当前目录下由dirname指定的目录；如dirname中包含路径，则删除指定位置的目录。删除目录时，必须具有对其父目录的写权限;

      注意：子目录被删除之前应该是空目录。就是说，该目录中的所有文件必须用rm命令全部，另外，当前工作目录必须在被删除目录之上，不能是被删除目录本身，也不能是被删除目录的子目录;

      虽然还可以用带有-r选项的rm命令递归删除一个目录中的所有文件和该目录本身，但是这样做存在很大的危险性

     来自: [[http://man.linuxde.net/rmdir]]
** shred
   - 简介

     shred是一条终端命令，功能是重复覆盖文件，使得即使是昂贵的硬件探测仪器也难以将数据复原; 这条命令的功能足够适合实现文件粉碎的功效;

     警告：请注意使用shred 时有一个很重要的条件：

     文件系统会在原来的位置覆盖指定的数据。传统的文件系统符合此条件，但许多现代的文件系统都不符合条件。以下是会令shred 无效或不担保一定有效的文件系统的

     例子：

     有纪录结构或是日志式文件系统，如AIX 及Solaris 使用的文件系统 (以及JFS、ReiserFS、XFS、Ext3 等);

     会重复写入数据，及即使一部份写入动作失败后仍可继续的文件系统，如使用RAID 的文件系统;

     会不时进行快照记录的文件系统，像Network Applicance 的NFS 服务器;

     文件系统是存放于缓存位置，比如NFS 第三版用户端;

     压缩文件系统;
** sync
   - 简介

     sync命令用于强制被改变的内容立刻写入磁盘，更新超块信息;

     在Linux/Unix系统中，在文件或数据处理过程中一般先放到内存缓冲区中，等到适当的时候再写入磁盘，以提高系统的运行效率。sync命令则可用来强制将内存缓冲区中的数据立即写入磁盘中。用户通常不需执行sync命令，系统会自动执行update或bdflush操作，将缓冲区的数据写 入磁盘。只有在update或bdflush无法执行或用户需要非正常关机时，才需手动执行sync命令

     来自: [[http://man.linuxde.net/sync]]
** touch
   - 简介

     touch命令有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件

     来自: [[http://man.linuxde.net/touch]]

   - 应用
     - 文件编译时, 可能发生各个文件时间跨度过大, 导致无法编译
** truncate
   - 简介

     将文件缩减或扩展至指定大小;

     如果指定文件不存在则创建;

     如果指定文件超出指定大小则超出的数据将丢失;

     如果指定文件小于指定大小则用0 补足;

* 文本工具
** base64
   - 简介

     使用 Base64 编码/解码文件或标准输入输出;
** cat
   - 简介

     cat命令连接文件并打印到标准输出设备上，cat经常用来显示文件的内容，类似于下的type命令;

      注意：当文件较大时，文本在屏幕上迅速闪过（滚屏），用户往往看不清所显示的内容。因此，一般用more等命令分屏显示。为了控制滚屏，可以按Ctrl+S键，停止滚屏；按Ctrl+Q键可以恢复滚屏。按Ctrl+C（中断）键可以终止该命令的执行，并且返回Shell提示符状态

     来自: [[http://man.linuxde.net/cat]]
** cksum
   - 简介

     cksum命令是检查文件的CRC是否正确，确保文件从一个系统传输到另一个系统的过程中不被损坏。这种方法要求校验和在源系统中被计算出来，在目的系统中又被计算一次，两个数字进行比较，如果校验和相等，则该文件被认为是正确传输了;

     注意：CRC是指一种排错检查方法，即循环冗余校验法;

     指定文件交由cksum命令进行校验后，会返回校验结果供用户核对文件是否正确无误。若不指定任何文件名称或是所给予的文件名为"-"，则cksum命令会从标准输入设备中读取数据

     来自: [[http://man.linuxde.net/cksum]]
** comm
   - 简介

     comm命令可以用于两个文件之间的比较，它有一些选项可以用来调整输出，以便执行交集、求差、以及差集操作;

     交集：打印出两个文件所共有的行;

     求差：打印出指定文件所包含的且不相同的行;

     差集：打印出包含在一个文件中，但不包含在其他指定文件中的行

     来自: [[http://man.linuxde.net/comm]]
** csplit
   - 简介

     csplit命令用于将一个大文件分割成小的碎片，并且将分割后的每个碎片保存成一个文件。碎片文件的命名类似“xx00”，“xx01”。csplit命令是split的一个变体，split只能够根据文件大小或行数来分割，但csplit能够根据文件本身特点来分割文件

     来自: [[http://man.linuxde.net/csplit]]
** cut
   - 简介

     cut命令用来显示行中的指定部分，删除文件中指定字段。cut经常用来显示文件的内容，类似于下的type命令;

     说明：该命令有两项功能，其一是用来显示文件的内容，它依次读取由参数file所指 明的文件，将它们的内容输出到标准输出上；其二是连接两个或多个文件，如cut fl f2 > f3将把文件fl和几的内容合并起来，然后通过输出重定向符“>”的作用，将它们放入文件f3中;;;

     当文件较大时，文本在屏幕上迅速闪过（滚屏），用户往往看不清所显示的内容。因此，一般用more等命令分屏显示。为了控制滚屏，可以按Ctrl+S键，停止滚屏；按Ctrl+Q键可以恢复滚屏。按Ctrl+C（中断）键可以终止该命令的执行，并且返回Shell提示符状态

     来自: [[http://man.linuxde.net/cut]]
** expand
   - 简介

     expand命令用于将文件的制表符（TAB）转换为空白字符（space），将结果显示到标准输出设备

     来自: [[http://man.linuxde.net/expand]]
** fmt
   - 简介

     fmt命令读取文件的内容，根据选项的设置对文件格式进行简单的优化处理，并将结果送到标准输出设备

     来自: [[http://man.linuxde.net/fmt]]
** fold
   - 简介

     fold命令用于控制文件内容输出时所占用的屏幕宽度。fold命令会从指定的文件里读取内容，将超过限定列宽的列加入增列字符后，输出到标准输出设备。若不指定任何文件名称，或是所给予的文件名为“-”，则fold指令会从标准输入设备读取数据

     来自: [[http://man.linuxde.net/fold]]
** head
   - 简介

     head命令用于显示文件的开头的内容。在默认情况下，head命令显示文件的头10行内容

     来自: [[http://man.linuxde.net/head]]
** join
   - 简介

     join命令用来将两个文件中，指定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，再输出到标准输出设备

     来自: [[http://man.linuxde.net/join]]
** md5sum
   - 简介

     md5sum命令采用MD5报文摘要算法（128位）计算和检查文件的校验和。一般来说，安装了Linux后，就会有md5sum这个工具，直接在命令行终端直接运行;

     MD5算法常常被用来验证网络文件传输的完整性，防止文件被人篡改。MD5 全称是报文摘要算法（Message-Digest Algorithm 5），此算法对任意长度的信息逐位进行计算，产生一个二进制长度为128位（十六进制长度就是32位）的“指纹”（或称“报文摘要”），不同的文件产生相同的报文摘要的可能性是非常非常之小的

     来自:[[ http://man.linuxde.net/md5sum]]
** nl
   - 简介

     nl命令读取 file 参数（缺省情况下标准输入），计算输入中的行号，将计算过的行号写入标准输出。在输出中，nl命令根据您在命令行中指定的标志来计算左边的行。输入文本必须写在逻辑页中。每个逻辑页有头、主体和页脚节（可以有空节）。除非使用-p选项，nl 命令在每个逻辑页开始的地方重新设置行号。可以单独为头、主体和页脚节设置行计算标志（例如，头和页脚行可以被计算然而文本行不能）。其默认的结果与cat -n有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐0等等的功能

     来自: [[http://man.linuxde.net/nl]]
** od
   - 简介

     od命令用于输出文件的八进制、十六进制或其它格式编码的字节，通常用于显示或查看文件中不能直接显示在终端的字符;

     常见的文件为文本文件和二进制文件。此命令主要用来查看保存在二进制文件中的值。比如，程序可能输出大量的数据记录，每个数据是一个单精度浮点数。这些数据记录存放在一个文件中，如果想查看下这个数据，这时候od命令就派上用场了。在我看来，od命令主要用来格式化输出文件数据，即对文件中的数据进行无二义性的解释。不管是IEEE754格式的浮点数还是ASCII码，od命令都能按照需求输出它们的值

     来自: [[http://man.linuxde.net/od]]
** paste
   - 简介

     paste命令用于将多个文件按照列队列进行合并

     来自: [[http://man.linuxde.net/paste]]
** ptx
   很少用, 等找到使用环境再添加
** pr
   - 简介

     pr命令用来将文本文件转换成适合打印的格式，它可以把较大的文件分割成多个页面进行打印，并为每个页面添加标题

     来自: [[http://man.linuxde.net/pr]]
** sha1sum sha224sum sha256sum sha384sum sha512sum
   计算和检验sha值
** shuf
   看不明白, 而且我也做尝试不来, 留待以后接触
** sort
   - 简介

     sort命令是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入

     来自: [[http://man.linuxde.net/sort]]
** split
   - 简介

     split命令可以将一个大文件分割成很多个小文件，有时需要将文件分割成更小的片段，比如为提高可读性，生成日志等

     来自: [[http://man.linuxde.net/split]]
** sum
   - 简介

     sum命令用于计算并显示指定文件的校验和与文件所占用的磁盘块数

     来自: [[http://man.linuxde.net/sum]]
** tac
   - 简介

     tac命令用于将文件已行为单位的反序输出，即第一行最后显示，最后一行先显示

     来自: [[http://man.linuxde.net/tac]]
** tail
   - 简介

     tail命令用于输入文件中的尾部内容。tail命令默认在屏幕上显示指定文件的末尾10行。如果给定的文件不止一个，则在显示的每个文件前面加一个文件名标题。如果没有指定文件或者文件名为“-”，则读取标准输入;

     注意：如果表示字节或行数的N值之前有一个”+”号，则从文件开头的第N项开始显示，而不是显示文件的最后N项。N值后面可以有后缀：b表示512，k表示1024，m表示1 048576(1M)

     来自: [[http://man.linuxde.net/tail]]
** tr
   - 简介

     tr命令可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大

     来自: [[http://man.linuxde.net/tr]]
** tsort
   - 简介

     tsort命令通常用于解决一种逻辑问题，即必须通过观察到的部分次序预测出整个次序。tsort命令可以对保存在文本文件中的数据进行拓扑排序，只要你按照一定的规则把数据写在文本文件中，然后使用tsort命令进行排序;

     拓扑排序是对有向无环图的一种排序。表示了顶点按边的方向出现的先后顺序。如果有环，则无法表示两个顶点的先后顺序;

     在现实生活中，也会有不少应用例子，比如学校课程布置图，要先修完一些基础课，才可以继续修专业课;

     在软件开发中，比如多个模块之间的依赖关系、编译顺序，函数之间的调用关系等;

     在项目管理中，各个任务之间的先后次序，某些任务完成之后才能进行另外的任务等;

     一个简单的求拓扑排序的算法：首先要找到任意入度为0的一个顶点，删除它及所有相邻的边，再找入度为0的顶点，以此类推，直到删除所有顶点。顶点的删除顺序即为拓扑排序;
** unexpand
   - 简介

     unexpand命令用于将给定文件中的空白字符（space）转换为制表符（TAB），并把转换结果显示在标准输出设备（显示终端）

     来自: [[http://man.linuxde.net/unexpand]]
** uniq
   - 简介

     uniq命令用于报告或忽略文件中的重复行，一般与sort命令结合使用

     来自: [[http://man.linuxde.net/uniq]]
** wc
   - 简介

     wc命令用来计算数字。利用wc指令我们可以计算文件的Byte数、字数或是列数，若不指定文件名称，或是所给予的文件名为“-”，则wc指令会从标准输入设备读取数据

     来自: [[http://man.linuxde.net/wc]]
* shell工具
* 其他工具
