#+TITLE: expect基本用法

* 一、概述
  我们通过Shell可以实现简单的控制流功能，如：循环、判断等。但是对于需要交互的场合则必须通过人工来干预，有时候我们可能会需要实现和交互程序如telnet服务器等进行交互的功能。而Expect就使用来实现这种功能的工具.

　　Expect是一个免费的编程工具语言，用来实现自动和交互式任务进行通信，而无需人的干预。Expect的作者Don Libes在1990年 开始编写Expect时对Expect做有如下定义：Expect是一个用来实现自动交互功能的软件套件 (Expect [is a] software suite for automating interactive tools)。使用它系统管理员 的可以创建脚本用来实现对命令或程序提供输入，而这些命令和程序是期望从终端（terminal）得到输入，一般来说这些输入都需要手工输入进行的。 Expect则可以根据程序的提示模拟标准输入提供给程序需要的输入来实现交互程序执行。甚至可以实现实现简单的BBS聊天机器人.

　　Expect是不断发展的，随着时间的流逝，其功能越来越强大，已经成为系统管理员的的一个强大助手。Expect需要Tcl编程语言的支持，要在系统上运行Expect必须首先安装Tcl.

* 二、expect的安装
  - =yum install -y expect= 会自动安装tcl依赖包

* 三、expect用法
  1. =#!/usr/bin/expect=

    这一行告诉操作系统脚本里的代码使用那一个shell来执行。这里的expect其实和linux下的bash、windows下的cmd是一类东西。 
  
    注意：这一行需要在脚本的第一行。 
  2. =set timeout 30=

    基本上认识英文的都知道这是设置超时时间的，现在你只要记住他的计时单位是：秒   。timeout -1 为永不超时
  3. =spawn ssh -l username 192.168.1.1=

    spawn是进入expect环境后才可以执行的expect内部命令，如果没有装expect或者直接在默认的SHELL下执行是找不到spawn命令的。所以不要用 “which spawn“之类的命令去找spawn命令。好比windows里的dir就是一个内部命令，这个命令由shell自带，你无法找到一个dir.com 或 dir.exe 的可执行文件。 

    它主要的功能是给ssh运行进程加个壳，用来传递交互指令。 
  4. 
   #+BEGIN_EXAMPLE
   expect "password:" 
   #+END_EXAMPLE

    这里的expect也是expect的一个内部命令，有点晕吧，expect的shell命令和内部命令是一样的，但不是一个功能，习惯就好了。这个命令的意思是判断上次输出结果里是否包含“password:”的字符串，如果有则立即返回，否则就等待一段时间后返回，这里等待时长就是前面设置的30秒 
  5.
   #+BEGIN_EXAMPLE
   send "ispass\r" 
   #+END_EXAMPLE

    这里就是执行交互动作，与手工输入密码的动作等效。 

    温馨提示： 命令字符串结尾别忘记加上“\r”，如果出现异常等待的状态可以核查一下。 
  6. =interact=

    执行完成后保持交互状态，把控制权交给控制台，这个时候就可以手工操作了。如果没有这一句登录完成后会退出，而不是留在远程终端上。如果你只是登录过去执行 
  7. $argv 参数数组

    expect脚本可以接受从bash传递过来的参数.可以使用[lindex $argv n]获得，n从0开始，分别表示第一个,第二个,第三个....参数

* 四、示例
  linux系统中, 根目录/root/下有一个文件ip-pwd.ini, 内容如下
  #+BEGIN_EXAMPLE
  10.111.11.1,root,xyxyxy
  10.111.11.1,root,xzxzxz
  10.111.11.1,root,123456
  10.111.11.1,root,xxxxxx
  ......
  #+END_EXAMPLE
  文件中每一行的格式都为linux服务器的ip root root 密码, 请用一个shell批量将这些服务器中的所有tomcat进程kill掉;

  讲解: 有了ip, 用户名和密码, 剩下的就是登录机器, 然后执行命令. 批量登录机器并执行命令可以考虑使用expect

  首先, 编辑expect脚本kill_tomcat.expext
  #+BEGIN_EXAMPLE
  #!/usr/bin/expect
  set passwd [index $argv 0]
  set host [index $argv 1]
  spawn ssh root@$host
  expect {
    "yes/no" { send "yes/r"; exp_continue}
    "password:" { send "$passwd\r"}
  }
  expect "]*"
  send "killall java\r"
  expect "]*"
  send "exit\r"
  #+END_EXAMPLE
  然后编辑shell脚本
  #+BEGIN_EXAMPLE
  #!/bin/bash
  n=`wc -l ip-pwd.init`
  for i in `seq 1 $n`
  do
      ip=`sed -n "$n"p ip-pwd.ini | awk -F ',' '{print $1}'`
      pw=`sed -n "$n"p ip-pwd.ini | awk -F ',' '{print $3}'`
      ./kill_tomcat.expect $pw $ip
  done
  #+END_EXAMPLE
