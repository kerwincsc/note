* lsof - list open file

** lsof命令妙用

*** 查看某端口被什么进程占用

*** 查看所属用户进程所打开的某种类型的文件

*** 查找谁在使用某个文件系统

*** 恢复删除的文件

    恢复被删除的文件有一个前提: 该文件的正在被另一个程序占用

*** DONE 获取网络信息

**** 使用-i显示所有连接

     有些人喜欢用netstat来获取网络连接，但是我更喜欢使用lsof来进行此项工作。结果以对我来说很直观的方式呈现，我仅仅只需改变我的语法，就可以通过同样的命令来获取更多信息;

     #+BEGIN_EXAMPLE
     # lsof -i
 
     COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME
     dhcpcd 6061 root 4u IPv4 4510 UDP *:bootpc
     sshd 7703 root 3u IPv6  6499 TCP *:ssh (LISTEN)
     sshd 7892 root 3u IPv6  6757 TCP 10.10.1.5:ssh->192.168.1.5:49901 (ESTABLISHED)
     #+END_EXAMPLE

**** 使用-i 6仅获取IPv6流量

     #+BEGIN_EXAMPLE
     # lsof -i 6
     #+END_EXAMPLE

**** 仅显示TCP连接（同理可获得UDP连接）

     你也可以通过在-i后提供对应的协议来仅仅显示TCP或者UDP连接信息;

     #+BEGIN_EXAMPLE
     # lsof -iTCP
 
     COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME
     sshd 7703 root 3u IPv6 6499 TCP *:ssh (LISTEN)
     sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh->192.168.1.5:49901 (ESTABLISHED)
     #+END_EXAMPLE

**** 使用-i:port来显示与指定端口相关的网络信息

     或者，你也可以通过端口搜索，这对于要找出什么阻止了另外一个应用绑定到指定端口实在是太棒了

     #+BEGIN_EXAMPLE
     # lsof -i :22
 
     COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME
     sshd 7703 root 3u  IPv6 6499 TCP *:ssh (LISTEN)
     sshd 7892 root 3u  IPv6 6757 TCP 10.10.1.5:ssh->192.168.1.5:49901 (ESTABLISHED)
     #+END_EXAMPLE

**** 使用@host来显示指定到指定主机的连接

     这对于你在检查是否开放连接到网络中或互联网上某个指定主机的连接时十分有用;

     #+BEGIN_EXAMPLE
     # lsof -i@172.16.12.5
 
     sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh->172.16.12.5:49901 (ESTABLISHED)
     #+END_EXAMPLE

**** 使用@host:port显示基于主机与端口的连接

     你也可以组合主机与端口的显示信息。

     #+BEGIN_EXAMPLE
     # lsof -i@172.16.12.5:22
 
     sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh->172.16.12.5:49901 (ESTABLISHED)
     #+END_EXAMPLE

**** 找出监听端口

     找出正等候连接的端口。

     #+BEGIN_EXAMPLE
     # lsof -i -sTCP:LISTEN
     #+END_EXAMPLE

     你也可以grep “LISTEN”来完成该任务;

     #+BEGIN_EXAMPLE
     # lsof -i | grep -i LISTEN
 
     iTunes     400 daniel   16u  IPv4 0x4575228  0t0 TCP *:daap (LISTEN)
     #+END_EXAMPLE

**** 找出已建立的连接

     你也可以显示任何已经连接的连接;

     #+BEGIN_EXAMPLE
     # lsof -i -sTCP:ESTABLISHED
     #+END_EXAMPLE

     你也可以通过grep搜索“ESTABLISHED”来完成该任务;

     #+BEGIN_EXAMPLE
     # lsof -i | grep -i ESTABLISHED
 
     firefox-b 169 daniel  49u IPv4 0t0 TCP 1.2.3.3:1863->1.2.3.4:http (ESTABLISHED)
     #+END_EXAMPLE

*** DONE 用户信息

    你也可以获取各种用户的信息，以及它们在系统上正干着的事情，包括它们的网络活动、对文件的操作等;

**** 使用-u显示指定用户打开了什么

     #+BEGIN_EXAMPLE
     # lsof -u daniel
 
     -- snipped --
     Dock 155 daniel  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib
     Dock 155 daniel  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib
     Dock 155 daniel  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib
     Dock 155 daniel  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib
     Dock 155 daniel  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib
     -- snipped --
     #+END_EXAMPLE
    
**** 使用-u ^user来显示除指定用户以外的其它所有用户所做的事情

     #+BEGIN_EXAMPLE
     # lsof -u ^daniel
 
     -- snipped --
     Dock 155 jim  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib
     Dock 155 jim  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib
     Dock 155 jim  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib
     Dock 155 jim  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib
     Dock 155 jim  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib
     -- snipped --
     #+END_EXAMPLE

**** 杀死指定用户所做的一切事情

     #+BEGIN_EXAMPLE
     # kill -9 `lsof -t -u daniel`
     #+END_EXAMPLE

*** 命令和进程

    可以查看指定程序或进程由什么启动，这通常会很有用，而你可以使用lsof通过名称或进程ID过滤来完成这个任务。下面列出了一些选项:

**** 使用-c查看指定的命令正在使用的文件和网络连接

     #+BEGIN_EXAMPLE
     # lsof -c syslog-ng
 
     COMMAND    PID USER   FD   TYPE     DEVICE    SIZE       NODE NAME
     syslog-ng 7547 root  cwd    DIR    3,3    4096   2 /
     syslog-ng 7547 root  rtd    DIR    3,3    4096   2 /
     syslog-ng 7547 root  txt    REG    3,3  113524  1064970 /usr/sbin/syslog-ng
     -- snipped --
     #+END_EXAMPLE

**** 使用-p查看指定进程ID已打开的内容

     #+BEGIN_EXAMPLE
     # lsof -p 10075
 
     -- snipped --
     sshd    10068 root  mem    REG    3,3   34808 850407 /lib/libnss_files-2.4.so
     sshd    10068 root  mem    REG    3,3   34924 850409 /lib/libnss_nis-2.4.so
     sshd    10068 root  mem    REG    3,3   26596 850405 /lib/libnss_compat-2.4.so
     sshd    10068 root  mem    REG    3,3  200152 509940 /usr/lib/libssl.so.0.9.7
     sshd    10068 root  mem    REG    3,3   46216 510014 /usr/lib/liblber-2.3
     sshd    10068 root  mem    REG    3,3   59868 850413 /lib/libresolv-2.4.so
     sshd    10068 root  mem    REG    3,3 1197180 850396 /lib/libc-2.4.so
     sshd    10068 root  mem    REG    3,3   22168 850398 /lib/libcrypt-2.4.so
     sshd    10068 root  mem    REG    3,3   72784 850404 /lib/libnsl-2.4.so
     sshd    10068 root  mem    REG    3,3   70632 850417 /lib/libz.so.1.2.3
     sshd    10068 root  mem    REG    3,3    9992 850416 /lib/libutil-2.4.so
     -- snipped --
     #+END_EXAMPLE

**** -t选项只返回PID

     #+BEGIN_EXAMPLE
     # lsof -t -c Mail
 
     350
     #+END_EXAMPLE

*** 文件和目录

    通过查看指定文件或目录，你可以看到系统上所有正与其交互的资源——包括用户、进程等。

**** 显示与指定目录交互的所有一切

     #+BEGIN_EXAMPLE
     # lsof /var/log/messages/
 
     COMMAND    PID USER   FD   TYPE DEVICE   SIZE   NODE NAME
     syslog-ng 7547 root    4w   REG    3,3 217309 834024 /var/log/messages
     #+END_EXAMPLE

**** 显示与指定文件交互的所有一切

     #+BEGIN_EXAMPLE
     # lsof /home/daniel/firewall_whitelist.txt
     #+END_EXAMPLE

*** 高级用法

    与tcpdump类似，当你开始组合查询时，它就显示了它强大的功能;

**** 显示daniel连接到1.1.1.1所做的一切

     #+BEGIN_EXAMPLE
     # lsof -u daniel -i @1.1.1.1
 
     bkdr   1893 daniel 3u  IPv6 3456 TCP 10.10.1.10:1234->1.1.1.1:31337 (ESTABLISHED)
     #+END_EXAMPLE

**** 同时使用-t和-c选项以给进程发送 HUP 信号

     #+BEGIN_EXAMPLE
     # kill -HUP `lsof -t -c sshd`
     #+END_EXAMPLE

**** lsof +L1显示所有打开的链接数小于1的文件

     这通常（当不总是）表示某个攻击者正尝试通过删除文件入口来隐藏文件内容。

     #+BEGIN_EXAMPLE
     # lsof +L1
 
     (hopefully nothing)
     #+END_EXAMPLE

**** 显示某个端口范围的打开的连接

     #+BEGIN_EXAMPLE
     # lsof -i @fw.google.com:2150=2180
     #+END_EXAMPLE
